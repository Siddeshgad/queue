// Generated by CoffeeScript 1.10.0
var Producer, uuid,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

uuid = require('node-uuid');

Producer = (function() {
  function Producer(sequelize, wagner) {
    this.sequelize = sequelize;
    this.wagner = wagner;
    this.addMessage = bind(this.addMessage, this);
    this.Message = this.wagner.get('message');
    this.Queue = this.wagner.get('Queue');
  }

  Producer.prototype.addMessage = function(messageData, callback) {
    var messageId;
    messageId = uuid.v1();
    return this.Message.create({
      message_id: messageId,
      body: messageData.body
    }).then((function(_this) {
      return function(message) {
        console.log('Message added successfully.');
        if (message) {
          _this.Queue.list.push(message);
          return callback(null, messageId);
        } else {
          return callback("Not able to save message.");
        }
      };
    })(this))["catch"]((function(_this) {
      return function(err) {
        console.log("Got error while creating new message record.");
        console.log(err);
        return callback(err.message + " Got error while creating new message record.");
      };
    })(this));
  };

  return Producer;

})();

module.exports = Producer;
