// Generated by CoffeeScript 1.10.0
var _, fs, path;

fs = require('fs');

path = require('path');

_ = require('underscore');

module.exports = function(sequelize, wagner) {
  var excludeFiles;
  this.sequelize = sequelize;
  this.wagner = wagner;
  this.models = {};
  excludeFiles = ["index.coffee", "index.js"];
  fs.readdirSync(__dirname).filter((function(_this) {
    return function(file) {
      return (file.indexOf(".") !== 0) && excludeFiles.indexOf(file) < 0;
    };
  })(this)).forEach((function(_this) {
    return function(file) {
      var err, error, model;
      try {
        model = _this.sequelize["import"](path.join(__dirname, file));
        return _this.models[model.name] = model;
      } catch (error) {
        err = error;
        return console.log(err.message);
      }
    };
  })(this));
  Object.keys(this.models).forEach((function(_this) {
    return function(modelName) {
      if ("associate" in _this.models[modelName]) {
        return _this.models[modelName].associate(_this.models);
      }
    };
  })(this));
  _.each(this.models, (function(_this) {
    return function(value, key) {
      return _this.wagner.factory(key, function() {
        return value;
      });
    };
  })(this));
  return this.models;
};
